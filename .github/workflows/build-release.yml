# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build, Test and Release MinimalMediator

on:
  push:
    branches: [ "main" ]
  pull_request: 
    branches: [ "main" ]
  release: 
    branches:
      - 'release/**'
    types:
      - published

env:
  FEED_URL: https://api.nuget.org/v3/index.json
  BUILD_CONFIGURATION: 'Release'    
  DOTNET_VERSION: '8.x'             

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

  feed-build-and-deploy:
    if: ${{ github.event_name == 'release' && github.ref_type == 'tag' }}
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Setup versioning
      - uses: dotnet/nbgv@master
        with:
          setAllVars: true

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Run dotnet build and package
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}' /p:Version=$NBGV_NuGetPackageVersion
          dotnet pack -c '${{ env.BUILD_CONFIGURATION }}' -o ./artifacts /p:Version=$NBGV_NuGetPackageVersion
      # Publish the package to Azure Artifacts
      - name: 'dotnet publish'
        run: dotnet nuget push ./artifacts/**.nupkg --source ${{ env.FEED_URL }} --api-key ${{ secrets.FEED_PAT }}
